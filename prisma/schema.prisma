// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model University {
  id Int @default(autoincrement()) @id
  name String @unique
  location String 
}

model StudyProgram {
  id Int @default(autoincrement()) @id
  name String @unique
}

model Student {
  id Int @default(autoincrement()) @id  
  name String 
  email String @unique
  passwordHash String

  studyprogram StudyProgram @relation(fields: [studyProgramId], references: [id])
  studyProgramId Int
  university University @relation(fields: [univeristyId], references: [id])
  univeristyId Int 
}

model Report {
  id Int @default(autoincrement()) @id
  reasons String

  review Review @relation(fields: [reviewId], references: [id])
  reviewId Int
  student Student @relation(fields: [studentId], references: [id])
  studentId Int 

}

model Company {
  id Int @default(autoincrement()) @id
  name String @unique
  imageUrl String 
}

model Review {
  id Int @default(autoincrement()) @id
  recommendation String
  interviewQuestions String
  dateCreated DateTime @default(now())
  anonymous Boolean @default(false)
  experienceType String 
  seekingDegree String 
  helpfulScore Int
  location String 
  salary Int
  duration Int
  interviewDifficultyRating Int
  acceptedStatus Boolean @default(false)
  experienceRating Int
  reviewTitle String

  studyProgram StudyProgram @relation(fields: [studyProgramId], references: [id])
  studyProgramId Int
  university University @relation(fields: [universityId], references: [id])
  universityId Int 
  company Company @relation(fields: [companyId], references: [id])
  companyId Int
  author Student @relation(fields: [authorId], references: [id])
  authorId Int 
  
}

model Rating {
  id Int @default(autoincrement()) @id
  helpfulRate Int 

  review Review @relation(fields: [reviewId], references: [id])
  reviewId Int
  student Student @relation(fields: [studentId], references: [id])
  studentId Int 
}


