generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model University {
  id       Int       @default(autoincrement()) @id
  name     String    @unique
  location String
  imageUrl String?
  Review   Review[]
  Student  Student[]
}

model StudyProgram {
  id      Int       @default(autoincrement()) @id
  name    String    @unique
  Review  Review[]
  Student Student[]
}

model Student {
  id             Int          @default(autoincrement()) @id
  name           String
  email          String       @unique
  passwordHash   String
  studyProgramId Int
  univeristyId   Int
  studyprogram   StudyProgram @relation(fields: [studyProgramId], references: [id])
  university     University   @relation(fields: [univeristyId], references: [id])
  Rating         Rating[]
  Report         Report[]
  Review         Review[]
}

model Report {
  id        Int     @default(autoincrement()) @id
  reasons   String
  reviewId  Int
  studentId Int
  review    Review  @relation(fields: [reviewId], references: [id])
  student   Student @relation(fields: [studentId], references: [id])
}

model Company {
  id       Int      @default(autoincrement()) @id
  name     String   @unique
  imageUrl String
  Review   Review[]
}

model Review {
  id                        Int          @default(autoincrement()) @id
  recommendation            String
  interviewQuestions        String
  dateCreated               DateTime     @default(now())
  anonymous                 Boolean      @default(false)
  experienceType            String
  seekingDegree             String
  helpfulScore              Int
  location                  String
  salary                    Int
  duration                  Int
  interviewDifficultyRating Int
  acceptedStatus            Boolean      @default(false)
  experienceRating          Int
  reviewTitle               String
  studyProgramId            Int
  universityId              Int
  companyId                 Int
  authorId                  Int
  author                    Student      @relation(fields: [authorId], references: [id])
  company                   Company      @relation(fields: [companyId], references: [id])
  studyProgram              StudyProgram @relation(fields: [studyProgramId], references: [id])
  university                University   @relation(fields: [universityId], references: [id])
  Rating                    Rating[]
  Report                    Report[]
}

model Rating {
  id          Int     @default(autoincrement()) @id
  helpfulRate Int
  reviewId    Int
  studentId   Int
  review      Review  @relation(fields: [reviewId], references: [id])
  student     Student @relation(fields: [studentId], references: [id])
}

